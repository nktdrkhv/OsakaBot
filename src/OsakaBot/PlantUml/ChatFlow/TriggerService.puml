@startuml
class TriggerService {
    + TriggerService(chatScopeStorage:IChatScopeStorage, triggerStorage:ITriggerStorage, effectDispatcher:IEffectDispatcher, sqids:SqidsEncoder)
    + <<async>> ExecuteAsync(user:InnerUser, trigger:Trigger) : ValueTask
    + <<async>> ExecuteAsync(user:InnerUser, effect:EffectBase) : ValueTask
    + <<async>> FromValidCustomInput(user:InnerUser) : ValueTask<Trigger?>
    + <<async>> FromInvalidCustomInput(user:InnerUser) : ValueTask<Trigger?>
    + <<async>> FromPlainPreparedAsync(user:InnerUser, prepared:string) : ValueTask<Trigger?>
    + <<async>> FromEncodedPreparedAsync(user:InnerUser, encodedId:string) : ValueTask<Trigger?>
    + <<async>> FromEncodedStoredAsync(user:InnerUser, encodedId:string) : ValueTask<Trigger?>
    + IntoEncodedId(user:InnerUser, trigger:Trigger) : string
}
ITriggerService <|-- TriggerService
TriggerService --> "_chatScopeStorage" IChatScopeStorage
TriggerService --> "_triggerStorage" ITriggerStorage
TriggerService --> "_effectDispatcher" IEffectDispatcher
TriggerService --> "_sqids" SqidsEncoder
@enduml
